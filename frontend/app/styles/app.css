/* -------------------------------------------------------------------------- */

body.ember-application > div.ember-view > div.container
{
    padding-right: 5px;
    padding-left: 5px;
}

/* -------------------------------------------------------------------------- */

svg {
  font-size: 14px;
}

.active {
  stroke: #f93;
  /*stroke-width: 2px;*/
}

.map.selected g.axis text {
  font-weight: bold;
}

.map.zoomed g.axis {
    cursor: move;
}

.foreground path {
  fill: none;
  stroke-opacity: .125;
  stroke-width: 0.75px;
  stroke: #808;
}

.foreground .faded path {
  fill: none;
  stroke: #000;
  stroke-width: 0.75px;
  stroke-opacity: .05;
}

.devel .foreground path {
  stroke-opacity: 1;
  stroke-width: 2px;
}
.foreground path.reSelected
{
    stroke : red;
}
/* this rule targets the legend (html) and the path (svg); different css
 * attributes apply to each; the purpose of combining the rule is to enable a user
 * to easily navigate from the legend to the css rule. */
div#scaffoldLegend > ul > li.scaffoldA,
.foreground path.scaffoldA
{
    /* stroke : red; */
    color : red;
    stroke-dasharray : 1 2 3 4 5;
}
div#scaffoldLegend
{
  float: left;
  margin-right: 1em;
}
div#scaffoldLegend > ul
{
  list-style-type: none;
}
.foreground path.strong
{
    stroke-width : 2px;
    stroke-opacity: 1;
}

/*.brush .extent {
  fill-opacity: .3;
  stroke: #fff;
  shape-rendering: crispEdges;
}*/

.axis line, .axis path {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  text-shadow: 0 1px 0 #fff;
  cursor: move;
  text-anchor: middle;
}
.ap > text {
  text-anchor: middle;
}
.ap.rightmost.not_top > text {
  text-anchor: start;
}
.ap.leftmost.not_top > text {
  text-anchor: end;
}

/* -------------------------------------------------------------------------- */
#grid {
    float: right;
    /* padding-right: 100px; */
    padding-bottom: 50px;
    /* margin-left: 10em;	*/
    position:relative;}
.row, .header {
 /* clear: left; */
 font-size: 12px; line-height: 18px; height: 18px;}
.row:nth-child(odd) { background: rgba(0,0,0,0.05); }
.header { font-weight: bold; }
.cell { float: left; overflow: hidden; white-space: nowrap; width: 180px; height: 18px;}
.col-0 { width: 100x; }

div.colouredMarkers
{
  white-space: pre;
  float: left;
  min-height: 10em;
  min-width: 6em;
}

/* -------------------------------------------------------------------------- */

.axis path,
.axis line{
  fill: none;
  stroke: black;
  shape-rendering: crispEdges;
}
/* Brush css style */
.brush .extent {
  stroke: #000;
  fill-opacity: .125;
  shape-rendering: crispEdges;
}

/* Button */
.btn { cursor: pointer; }

.btn > rect
{
  width: 60px;
  height: 30px;
  rx: 3px;
  ry: 3px;
  fill: #eee;
  stroke: #ddd;
}
.btn > text
{
  text-anchor: middle;
}


/* Tool tip */
div.highlightMarker,
div.toolTip{
  position:absolute;
  text-align: lift;
  padding: 2px;
  font: 12px sans-serif;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border: 0px;
  border-radius: 2px;
}

div.highlightMarker
{
    height : "auto";
    width: "auto";
    opacity:  0.9;
    display: "inline";
}

/* -------------------------------------------------------------------------- */
/* target zone for axis stacking drag&drop
 */
/** When dragging, change cursor for all elts other than .current. */
.axisDrag {
    cursor: no-drop;
}
.axisDrag .stackDropTarget.current {
    display : inherit;
}
.dragTransition .stackDropTarget {
    pointer-events: none !important;
}
.stackDropTarget {
    display : none;
    pointer-events: none;
    cursor: copy;

    /* These values are overridden when .current and .dragHover */
    fill: rgba(80, 80, 255, 0.1);
    stroke: rgba(255, 80, 80, 0.4);
    // stroke-width:1px;
    stroke-dasharray: 3,8;
}
.stackDropTarget.current {
    pointer-events: inherit;
    cursor: copy;
}
.stackDropTarget.current .dragHover {
    fill: rgba(80, 80, 255, 0.2);
    stroke: rgba(255, 80, 80, 0.6);
    stroke-dasharray: 2,6;
}

/* -------------------------------------------------------------------------- */
/** Styles for multi-level dropdown
 *  From http://bootsnipp.com/snippets/featured/multi-level-dropdown-menu-bs3 */

.dropdown-submenu {
    position: relative;
}

.dropdown-submenu>.dropdown-menu {
    top: 0;
    left: 100%;
    margin-top: -6px;
    margin-left: -1px;
    -webkit-border-radius: 0 6px 6px 6px;
    -moz-border-radius: 0 6px 6px;
    border-radius: 0 6px 6px 6px;
}

.dropdown-submenu:hover>.dropdown-menu {
    display: block;
}

.dropdown-submenu>a:after {
    display: block;
    content: " ";
    float: right;
    width: 0;
    height: 0;
    border-color: transparent;
    border-style: solid;
    border-width: 5px 0 5px 5px;
    border-left-color: #ccc;
    margin-top: 5px;
    margin-right: -10px;
}

.dropdown-submenu:hover>a:after {
    border-left-color: #fff;
}

.dropdown-submenu.pull-left {
    float: none;
}

.dropdown-submenu.pull-left>.dropdown-menu {
    left: -100%;
    margin-left: 10px;
    -webkit-border-radius: 6px 0 6px 6px;
    -moz-border-radius: 6px 0 6px 6px;
    border-radius: 6px 0 6px 6px;
}
